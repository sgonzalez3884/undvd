#!/usr/bin/perl
#
# Author: Martin Matusiak <numerodix@gmail.com>
# Licensed under the GNU Public License, version 3.

use strict;
use Getopt::Long qw(:config no_ignore_case);

use FindBin qw($RealBin);
use lib $RealBin;
use colors;
use common qw(:DEFAULT $suite $defaults $tools);


my $usage = "Usage:  "   . s_b($suite->{tool_name})   . " ["
	. s_bb("<file(s)>") . " | "
	. s_b("--dev") . " " . s_bb($defaults->{dvd_device}) . " | "
	. s_b("--dir") . " " . s_bb("/path")    . " | "
	. s_b("--iso") . " " . s_bb($defaults->{disc_image}) . "]
  <file(s)>     files to read
  -d --dev      dvd device to read from (default is " . s_bb($defaults->{dvd_device}) . ")
  -q --dir      dvd directory to read from
  -i --iso      dvd iso image to read from
     --version  show " . $suite->{suite_name} . " version\n";

my $dvd_device;
my $parse = GetOptions(
	"d|dev=s"=>\$dvd_device,
	"q|dir=s"=>\$dvd_device,
	"i|iso=s"=>\$dvd_device,
	"version"=>\&print_version,
);

print_tool_banner();

if (! $parse) {
	print "$usage";
	exit 2;
}

if ((! $dvd_device) and (! @ARGV)) {
	print "$usage";
	exit 2;
}


# Build array either of dvd titles or files given as input

my @titles = ();
if ($dvd_device) {
	my $titles_count = examine_dvd_for_titlecount($dvd_device);
	if (scalar $titles_count < 1) {
		fatal("Could not read from %%%$dvd_device%%% dvd device");
	}
	for (my $i = 1; $i <= $titles_count; $i++) {
		push(@titles, $i);
	}
} else {
	@titles = @ARGV;
}

print_title_line(1);
foreach my $title (@titles) {

	if (! $dvd_device and ! -e $title) {
		nonfatal("File %%%$title%%% does not exist");
		next;
	}

	my $data = examine_title($title, $dvd_device);

	print_title_line(0, $data);
}
